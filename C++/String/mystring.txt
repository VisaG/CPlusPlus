----- Testing basic String creation & printing
string [0] = Wow
string [1] = C++ is neat!
string [2] = 
string [3] = a-z

----- Now reading myStrings from file

----- first, word by word
Read string = The
Read string = first
Read string = time
Read string = we
Read string = will
Read string = read
Read string = individual
Read string = words,
Read string = next
Read string = we
Read string = read
Read string = whole
Read string = lines

----- now, line by line
Read string = The  first  time  we  will
Read string =     read individual words, next    
Read string = we read whole lines  

----- Testing access to characters (using const)
Whole string is abcdefghijklmnopqsrtuvwxyz
now char by char: abcdefghijklmnopqsrtuvwxyz
----- Testing access to characters (using non-const)
Start with abcdefghijklmnopqsrtuvwxyz and convert to ABCDEFGHIJKLMNOPQSRTUVWXYZ

----- Testing relational operators between myStrings
Comparing app to apple
	Is left < right? 1
	Is left <= right? 1
	Is left > right? 0
	Is left >= right? 0
	Does left == right? 0
	Does left != right ? 1
Comparing apple to 
	Is left < right? 0
	Is left <= right? 0
	Is left > right? 1
	Is left >= right? 1
	Does left == right? 0
	Does left != right ? 1
Comparing  to Banana
	Is left < right? 1
	Is left <= right? 1
	Is left > right? 0
	Is left >= right? 0
	Does left == right? 0
	Does left != right ? 1
Comparing Banana to Banana
	Is left < right? 0
	Is left <= right? 1
	Is left > right? 0
	Is left >= right? 1
	Does left == right? 1
	Does left != right ? 0

----- Testing relations between myStrings and char *
Comparing he to hello
	Is left < right? 1
	Is left <= right? 1
	Is left > right? 0
	Is left >= right? 0
	Does left == right? 0
	Does left != right ? 1
Comparing why to wackity
	Is left < right? 0
	Is left <= right? 0
	Is left > right? 1
	Is left >= right? 1
	Does left == right? 0
	Does left != right ? 1

----- Testing concatentation on myStrings
outrageous + milk = outrageousmilk
milk +  = milk
 + cow = cow
cow + bell = cowbell

----- Testing concatentation between myString and char *
abcde + XYZ = abcdeXYZ
XYZ + abcde = XYZabcde

----- Testing shorthand concat/assign on myStrings
who += what = whowhat
what += WHEN = whatWHEN
WHEN += Where = WHENWhere
Where += why = Wherewhy

----- Testing shorthand concat/assign using char *
I love  += programming = I love programming

----- Testing copy constructor and operator= on myStrings
original is cake, copy is fake
original is cake, copy is fake
after self assignment, copy is Copy Cat
Testing pass & return myStrings by value and ref
after calling Append, sum is BinkyBoo
val is winky
after assign,  val is BinkyBoo
